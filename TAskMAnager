#include <iostream>
#include <fstream>
#include <vector>
using namespace std;

struct Task 
{
    string name;
    string description;
    string deadline;
    bool is_completed;
};

void display_tasks(const vector<Task> &tasks)
{
    if (tasks.empty()) 
    {
        cout << "Тасков еще нет" << endl;
        return;
    }
    for (int i = 0; i < tasks.size(); i++) {
        cout << i + 1 << ". " << tasks[i].name << " - " << tasks[i].description;
        cout << " (Дедлайн: " << tasks[i].deadline << ", ";
        if (tasks[i].is_completed) 
        {
            cout << "Выполнено)" << endl;
        } else {
            cout << "Не выполнено)" << endl;
        }
    }
}

void add_task(vector<Task> &tasks) 
{
    Task task;
    cout << "Введите имя таска: ";
    getline(cin, task.name);
    cout << "Введите описание таска: ";
    getline(cin, task.description);
    cout << "Введите дедлайн: ";
    getline(cin, task.deadline);
    task.is_completed = false;
    tasks.push_back(task);
}

void remove_task(vector<Task>& tasks) 
{
    int index;
    cout << "Введите номер удаляемого таска: ";
    cin >> index;
    if (index >= 1 && index <= tasks.size()) 
    {
        tasks.erase(tasks.begin() + index - 1);
        cout << "Таск успешно удален" << endl;
    } else {
        cout << "Такого не существует" << endl;
    }
}

void mark_task_complete(vector<Task> &tasks) 
{
    int index;
    cout << "Введите номер таска: ";
    cin >> index;
    if (index >= 1 && index <= tasks.size()) 
    {
        tasks[index - 1].is_completed = true;
        cout << "Таск отмечен выполненным" << endl;
    } else {
        cout << "Такого не существует" << endl;
    }
}

void save_tasks(const vector<Task> &tasks) 
{
    ofstream file("tasks.txt");
    if (file.is_open()) 
    {
        for (int i = 0; i < tasks.size(); ++i) {
            file << tasks[i].name << endl;
            file << tasks[i].description << endl;
            file << tasks[i].deadline << endl;
            file << tasks[i].is_completed << endl;
        }
        file.close();
        cout << "Таск сохранен" << endl;
    }
}

void load_tasks(vector<Task> &tasks) 
{
    ifstream file("tasks.txt");
    if (file.is_open()) 
    {
        tasks.clear();
        string line;
        while (getline(file, line)) 
        {
            Task task;
            task.name = line;
            getline(file, line);
            task.description = line;
            getline(file, line);
            task.deadline = line;
            getline(file, line);
            task.is_completed = (line == "1");
            tasks.push_back(task);
        }
        file.close();
    }
}

int main() 
{
    vector<Task> tasks;
    load_tasks(tasks);

    while (true) 
    {
        cout << endl;
        cout << "Task Manager" << endl;
        cout << "------------" << endl;
        cout << "1. Посмотреть таски" << endl;
        cout << "2. Добавить таск" << endl;
        cout << "3. Убрать из списка" << endl;
        cout << "4. Отметить завершенным" << endl;
        cout << "5. Выход" << endl;

        int choice;
        cout << "Выберите действие: ";
        cin >> choice;
        cin.ignore();

        switch (choice) 
        {
            case 1:
                display_tasks(tasks);
                break;
            case 2:
                add_task(tasks);
                break;
            case 3:
                remove_task(tasks);
                break;
            case 4:
                mark_task_complete(tasks);
                break;
            case 5:
                save_tasks(tasks);
                cout << "Досвидания!" << endl;
                return 0;
            default:
                cout << "Такого варианта нет" << endl;
        }
    }
}
